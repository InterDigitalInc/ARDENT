-- MySQL Script generated by MySQL Workbench
-- Tuesday 19 November 2019 12:30:11 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ardent
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `ardent` ;

-- -----------------------------------------------------
-- Schema ardent
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ardent` DEFAULT CHARACTER SET utf8 ;
USE `ardent` ;

-- -----------------------------------------------------
-- Table `ardent`.`config-keys`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`config-keys` ;

CREATE TABLE IF NOT EXISTS `ardent`.`config-keys` (
  `conf-key` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`conf-key`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`config` ;

CREATE TABLE IF NOT EXISTS `ardent`.`config` (
  `conf-key` VARCHAR(45) NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`conf-key`),
  CONSTRAINT `fk_conf_key`
    FOREIGN KEY (`conf-key`)
    REFERENCES `ardent`.`config-keys` (`conf-key`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`compute-nodes-tier-level`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`compute-nodes-tier-level` ;

CREATE TABLE IF NOT EXISTS `ardent`.`compute-nodes-tier-level` (
  `tier-level` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`tier-level`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`compute-nodes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`compute-nodes` ;

CREATE TABLE IF NOT EXISTS `ardent`.`compute-nodes` (
  `idcompute-nodes` INT NOT NULL AUTO_INCREMENT,
  `availability-zone` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `tier-level` VARCHAR(45) NOT NULL,
  `vcpus` INT NOT NULL,
  `ram` INT NOT NULL,
  `disk` INT NOT NULL,
  PRIMARY KEY (`idcompute-nodes`),
  INDEX `fk_compute-nodes_1_idx` (`tier-level` ASC),
  UNIQUE INDEX `name_az_uq` (`availability-zone` ASC, `name` ASC),
  CONSTRAINT `fk_tier_level`
    FOREIGN KEY (`tier-level`)
    REFERENCES `ardent`.`compute-nodes-tier-level` (`tier-level`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`subnets-category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`subnets-category` ;

CREATE TABLE IF NOT EXISTS `ardent`.`subnets-category` (
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`subnets`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`subnets` ;

CREATE TABLE IF NOT EXISTS `ardent`.`subnets` (
  `idsubnets` INT NOT NULL AUTO_INCREMENT,
  `os-identifier` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idsubnets`),
  UNIQUE INDEX `os-identifier_UNIQUE` (`os-identifier` ASC),
  INDEX `fk_subnets_category_idx` (`category` ASC),
  CONSTRAINT `fk_subnets_category`
    FOREIGN KEY (`category`)
    REFERENCES `ardent`.`subnets-category` (`category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`networks-category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`networks-category` ;

CREATE TABLE IF NOT EXISTS `ardent`.`networks-category` (
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`networks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`networks` ;

CREATE TABLE IF NOT EXISTS `ardent`.`networks` (
  `idnetworks` INT NOT NULL AUTO_INCREMENT,
  `os-identifier` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idnetworks`),
  UNIQUE INDEX `os-identifier_UNIQUE` (`os-identifier` ASC),
  INDEX `fk_networks_category_idx` (`category` ASC),
  CONSTRAINT `fk_networks_category`
    FOREIGN KEY (`category`)
    REFERENCES `ardent`.`networks-category` (`category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`security-groups-category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`security-groups-category` ;

CREATE TABLE IF NOT EXISTS `ardent`.`security-groups-category` (
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`category`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`security-groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`security-groups` ;

CREATE TABLE IF NOT EXISTS `ardent`.`security-groups` (
  `idsecurity-groups` INT NOT NULL AUTO_INCREMENT,
  `os-identifier` VARCHAR(45) NOT NULL,
  `category` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idsecurity-groups`),
  UNIQUE INDEX `os-identifier_UNIQUE` (`os-identifier` ASC),
  INDEX `fk_security-groups_category_idx` (`category` ASC),
  CONSTRAINT `fk_security-groups_category`
    FOREIGN KEY (`category`)
    REFERENCES `ardent`.`security-groups-category` (`category`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`infrastructure-services-type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`infrastructure-services-type` ;

CREATE TABLE IF NOT EXISTS `ardent`.`infrastructure-services-type` (
  `service-type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`service-type`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`infrastructure-services`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`infrastructure-services` ;

CREATE TABLE IF NOT EXISTS `ardent`.`infrastructure-services` (
  `idinfrastructure-services` INT NOT NULL AUTO_INCREMENT,
  `service-type` VARCHAR(45) NOT NULL COMMENT 'service types:\n- ipgw::IP Address\n- sdn-controller::IP Address\n- dns::IP Address\n\n',
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idinfrastructure-services`),
  UNIQUE INDEX `service-type_UNIQUE` (`service-type` ASC),
  CONSTRAINT `fk_infrastructure-services_type`
    FOREIGN KEY (`service-type`)
    REFERENCES `ardent`.`infrastructure-services-type` (`service-type`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`security-group-rules`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`security-group-rules` ;

CREATE TABLE IF NOT EXISTS `ardent`.`security-group-rules` (
  `name` VARCHAR(45) NOT NULL,
  `protocol` VARCHAR(45) NOT NULL,
  `port` INT NULL,
  UNIQUE INDEX `index1` (`name` ASC, `protocol` ASC, `port` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`compute-nodes-networks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`compute-nodes-networks` ;

CREATE TABLE IF NOT EXISTS `ardent`.`compute-nodes-networks` (
  `idcompute-nodes` INT NOT NULL,
  `idnetworks` INT NOT NULL,
  PRIMARY KEY (`idcompute-nodes`, `idnetworks`),
  INDEX `fk_idnetwork_idx` (`idnetworks` ASC),
  CONSTRAINT `fk_idcompute`
    FOREIGN KEY (`idcompute-nodes`)
    REFERENCES `ardent`.`compute-nodes` (`idcompute-nodes`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_idnetwork`
    FOREIGN KEY (`idnetworks`)
    REFERENCES `ardent`.`networks` (`idnetworks`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ardent`.`flavors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ardent`.`flavors` ;

CREATE TABLE IF NOT EXISTS `ardent`.`flavors` (
  `name` VARCHAR(45) NULL,
  `vcpus` INT NULL,
  `ram` INT NULL,
  `disk` INT NULL,
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `ardent`.`config-keys`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('os-tenant-id');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('os-cli-version');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('mtu');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('cidr');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('ardent-version');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('sia-ip-frontend');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('node-passwd');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('parent-domain');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('enable-ipv4-rules');
INSERT INTO `ardent`.`config-keys` (`conf-key`) VALUES ('dhcp_agents');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`config`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`config` (`conf-key`, `value`) VALUES ('parent-domain', 'ict-flame.eu');
INSERT INTO `ardent`.`config` (`conf-key`, `value`) VALUES ('enable-ipv4-rules', '0');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`compute-nodes-tier-level`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`compute-nodes-tier-level` (`tier-level`) VALUES ('data_centre');
INSERT INTO `ardent`.`compute-nodes-tier-level` (`tier-level`) VALUES ('edge');
INSERT INTO `ardent`.`compute-nodes-tier-level` (`tier-level`) VALUES ('far_edge');
INSERT INTO `ardent`.`compute-nodes-tier-level` (`tier-level`) VALUES ('mist');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`subnets-category`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`subnets-category` (`category`) VALUES ('sia');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`networks-category`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('access');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('mgmt');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('cluster');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('data');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('msp');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('ps');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('sdnctrl');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('sia');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('wan');
INSERT INTO `ardent`.`networks-category` (`category`) VALUES ('clmc-sfemc');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`security-groups-category`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`security-groups-category` (`category`) VALUES ('mgmt');
INSERT INTO `ardent`.`security-groups-category` (`category`) VALUES ('msp');
INSERT INTO `ardent`.`security-groups-category` (`category`) VALUES ('sdnctrl');
INSERT INTO `ardent`.`security-groups-category` (`category`) VALUES ('sia');
INSERT INTO `ardent`.`security-groups-category` (`category`) VALUES ('wan');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`infrastructure-services-type`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`infrastructure-services-type` (`service-type`) VALUES ('dns');
INSERT INTO `ardent`.`infrastructure-services-type` (`service-type`) VALUES ('sdn_controller');

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`security-group-rules`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('wan', 'icmp', NULL);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('wan', 'tcp', 22);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sdnctrl', 'tcp', 2016);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sdnctrl', 'tcp', 2017);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sdnctrl', 'tcp', 6633);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sdnctrl', 'tcp', 6653);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sdnctrl', 'tcp', 8080);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('mgmt', 'icmp', NULL);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('mgmt', 'tcp', 22);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('mgmt', 'tcp', 80);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('mgmt', 'tcp', 8080);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('clmc', 'tcp', 80);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('ps', 'tcp', 80);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('sia', 'tcp', 80);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('msp', 'tcp', 80);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('msp', 'tcp', 7687);
INSERT INTO `ardent`.`security-group-rules` (`name`, `protocol`, `port`) VALUES ('msp', 'tcp', 8080);

COMMIT;


-- -----------------------------------------------------
-- Data for table `ardent`.`flavors`
-- -----------------------------------------------------
START TRANSACTION;
USE `ardent`;
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('clmc', 4, 32768, 100);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('frontend', 1, 1024, 10);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('moose', 1, 1536, 15);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('pce', 1, 1536, 15);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('ps', 1, 1024, 10);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('sfemc', 1, 1024, 100);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('sr', 1, 1536, 15);
INSERT INTO `ardent`.`flavors` (`name`, `vcpus`, `ram`, `disk`) VALUES ('nm', 1, 1024, 10);

COMMIT;

